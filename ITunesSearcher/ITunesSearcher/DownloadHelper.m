//
//  DownloadHelper.m
//  ITunesSearcher
//
//  Created by Admin on 14.06.17.
//  Copyright © 2017 Admin. All rights reserved.
//

#import "DownloadHelper.h"
#import "ISSearchViewController.h"
#import "ISTrack.h"

@implementation DownloadHelper

#pragma mark Download Helper Methods

// This method generates a permanent local file path to save a track to by appending
// the lastPathComponent of the URL (i.e. the file name and extension of the file)
// to the path of the app’s Documents directory.
+ (nullable NSURL *)localFilePathForUrl:(NSString *)previewUrl {
    NSString *documentsPath = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES)[0];
    if (([previewUrl compare:@""] != NSOrderedSame) && previewUrl != nil) {
        NSURL *url = [NSURL URLWithString:previewUrl];
        NSString *lastPathComponent = url.lastPathComponent;
        NSString *fullPath = [documentsPath stringByAppendingPathComponent:lastPathComponent];
        return [NSURL fileURLWithPath:fullPath];
    }
    return nil;
}

// This method checks if the local file exists at the path generated by localFilePathForUrl(_:)
+ (BOOL)localFileExistsForTrack:(ISTrack *)track {
    if (([track.previewURL compare:@""] != NSOrderedSame) && track.previewURL != nil) {
        NSURL *localURL = [DownloadHelper localFilePathForUrl:track.previewURL];
        BOOL isDir = NO;
        NSString *path = localURL.path;
        return [[NSFileManager defaultManager] fileExistsAtPath:path isDirectory:&isDir];
    }
    return NO;
}

+ (nullable NSNumber *)trackIndexForDownloadTask:(NSURLSessionDownloadTask *)downloadTask forSearchViewController:(ISSearchViewController *)searchViewController {
    @try {
        NSString *url = downloadTask.originalRequest.URL.absoluteString;
        for (ISTrack *track in searchViewController.searchResults) {
            if ([url compare:track.previewURL] == NSOrderedSame) {
                NSNumber *number = [NSNumber numberWithInteger:[searchViewController.searchResults indexOfObjectIdenticalTo:track]];
                return number;
            }
        }
    } @catch (NSException *exception) {
        NSLog(@"Error finding correct track in list");
    }
    return nil;
}


@end
